@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}
@mixin center5050 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}


@mixin circle($size, $color) {
    width: $size;
    height: $size;
    background-color: $color;
    border-radius: 50%;
}


// Media query manager
//  - 600px: phone
// 600 - 900px: tablet portrait (tab-port)
// 900 - 1200px: tablet landscape (tab-land)
// 1200-1800px: gewone computer waar we nu de website voor geschreven hebben
// 1800+: extra groot scherm (big-desktop)

//eerst Base en typography aanpassen, dan de layoutdelen (zoals header, footer en de grid), dan page layout, tot slot components

@mixin respond($breakpoint) { // em (= 16px) gebruiken ipv rem, niet helemaal duidelijk waarom maar rem werkt niet goed in media queries
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content }; // 600px/16    only screen als extra voorwaarde is best practice; dan past ie dit niet toe bij het uitprinten oid
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 59em) { @content }; // 900px/16  // > 944 past beter...
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content }; // 1200px/16
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content }; // 1800px/16
    }
}

//mixin-aantekening: je kunt behalve argumenten(arg) ook hele blokken code erheen doorgeven vanaf de @include door daar dus gewoon een {blokje} te maken en in de mixin { @content } neer te zetten waar je dat blok wilt hebben. Wel beetje omgekeerde wereld...